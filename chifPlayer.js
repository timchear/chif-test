window.chifPlayer=function(n){var t={};function e(c){if(t[c])return t[c].exports;var g=t[c]={i:c,l:!1,exports:{}};return n[c].call(g.exports,g,g.exports,e),g.l=!0,g.exports}return e.m=n,e.c=t,e.d=function(n,t,c){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:c})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(e.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)e.d(c,g,function(t){return n[t]}.bind(null,g));return c},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=1)}([function(module,exports,__webpack_require__){eval("const ByteReader = __webpack_require__(2)\nconst blender = __webpack_require__(3)\nconst EXCEPTION_API = 'https://us-central1-serene-art-244704.cloudfunctions.net/chear-exception'\nconst SimpleKv = __webpack_require__(4)\n\nconst noop = function(){}\n\nclass CHearFile {\n\n  async init (header, options = {}) {\n    \n    this.parts = {}\n    this.offset = 0\n\n    const { verify = true, write = true, debug = false } = options\n\n    const log = message => debug ? console.log(`CHIF DEBUG: ${new Date().toISOString()}: ${message}`) : noop()\n\n    log(`header size: ${header.length}`)\n\n    const addPart = (name, format, size, iv) => {\n      this.parts[name] = {\n        name,\n        format,\n        size,\n        iv,\n        offset: 0,\n        data: new Uint8Array(size),\n        slices: [],\n        sliceSum: 0\n      }\n    }\n\n    const addSlice = (name, from, length) => {\n      const part = this.parts[name]\n\n      if (!part) {\n        throw new Error(\n          `part '${name}' not found.  Use addPart() to created it first`\n        )\n      }\n\n      part.slices.push({\n        from: parseFloat(from),\n        to: parseFloat(from) + length - 1\n      })\n\n      part.sliceSum += length\n    }\n\n    const verifyMetadata = async (value) => {\n\n      log('verifying metadata...')\n      log(value)\n\n      const metadata = JSON.parse(value)\n\n      const { uuid } = metadata\n\n      // Thomas ====================\n      let startDate\n      let endDate\n      let domains\n\n      if (metadata.chear && metadata.chear.valid_range) {\n        startDate = metadata.chear.valid_range.start\n        endDate = metadata.chear.valid_range.end\n      }\n      if (metadata.chear && metadata.chear.valid_domains) {\n        domains = metadata.chear.valid_domains\n      } \n      // Thomas ====================\n\n      // determine if there is a whitelist and if so check current url for whitelist values\n      if (typeof (window) !== 'undefined' && domains !== undefined && domains.length > 0) {\n        let check = 0\n        const url = window.location.href\n        for (let i = 0; i < domains.length; i++) {\n          if (url.indexOf(domains[i]) > -1) {\n            check++\n            break\n          }\n        }\n        if (check === 0) {\n          throw new Error(`Can't render CHIF. The Current Domain: ${url}, is not Whitelisted`)\n        }\n      }\n\n      // determine if range exists and determine current date is within range\n      if (startDate !== undefined || endDate !== undefined) {\n        const currentDate = new Date()\n        let convertedDate = 'Undefined'\n        let convertedDate2 = 'Undefined'\n        if (startDate !== undefined) {\n          convertedDate = new Date(startDate)\n        }\n        if (endDate !== undefined) {\n          convertedDate2 = new Date(endDate)\n        }\n        if (convertedDate2 < currentDate || convertedDate > currentDate) {\n          throw new Error(\n      `Can't render CHIF. Currently Out of Opperational Date Range: Start: ${convertedDate} End: ${convertedDate2}.`\n          )\n        }\n      }\n\n      if (uuid && verify) {\n        const request = new Request(`${EXCEPTION_API}?id=${uuid}`)\n\n        let response\n\n        try {\n          // check uuid against CHear exception API\n          response = await fetch(request)\n        } catch (err) {\n          console.log(err.message)\n        }\n\n        if (response && response.status === 200) {\n          const body = await response.text()\n          throw new Error(`Can't render CHIF.  Response ${body}`)\n        }\n      }\n\n      return metadata\n    }\n\n    const reader = new ByteReader(header)\n\n    const parserOptions = { reader, addPart, addSlice, log }\n\n    const parsers = new Map([\n      [2, () => parse2(parserOptions)],\n      [3, () => parse3(parserOptions)],\n      [4, () => parse4(parserOptions)]\n    ])\n\n    const format = reader.readString(2)\n\n    if (format !== 'CH') {\n      throw new Error('not a valid CHIF')\n    }\n\n    const version = reader.readInt16()\n\n    log(`version: ${version}`)\n\n    this.version = version\n\n    const parse = parsers.get(version)\n\n    if (!parse) {\n      throw new Error('not a valid CHIF version')\n    }\n\n    const {\n      imageSize,\n      imageFormat,\n      audioSize,\n      audioFormat,\n      imageIv,\n      audioIv,\n      blockSize,\n      metadata,\n      data,\n      position\n    } = parse()\n\n    log(`metadata: ${metadata}, data: ${data}, position: ${position}`)\n\n    const audioPartName = 'audio1'\n    const imagePartName = 'image1'\n\n    log(`imageFormat: ${imageFormat}, imageSize: ${imageSize}, imageIv: ${imageIv}`)\n    addPart(imagePartName, imageFormat, imageSize, imageIv)\n\n    log(`audioFormat: ${audioFormat}, audioSize: ${audioSize}, audioIv: ${audioIv}`)\n    addPart(audioPartName, audioFormat, audioSize, audioIv)\n\n    const {\n      blockCount,\n      imageBlockSize,\n      audioBlockSize,\n      imageTailSize,\n      audioTailSize\n    } = blender.getBlockSizes(imageSize, audioSize, blockSize)\n\n    let currentBlock = 0\n    let offset = position\n\n    while (currentBlock < blockCount) {\n      addSlice(imagePartName, offset, imageBlockSize)\n      offset += imageBlockSize\n      addSlice(audioPartName, offset, audioBlockSize)\n      offset += audioBlockSize\n\n      currentBlock++\n    }\n\n    if (imageTailSize > 0) {\n      addSlice(imagePartName, offset, imageTailSize)\n      offset += imageTailSize\n    }\n\n    if (audioTailSize > 0) {\n      addSlice(audioPartName, offset, audioTailSize)\n      offset += audioTailSize\n    }\n\n    this.data = data\n    this.metadata = await verifyMetadata(metadata)\n\n    if (write) {\n      this.writeChunk(header, log)\n    }\n  }\n\n  writeChunk (chunk, log) {\n\n    log = log || noop;\n\n    log(`chunk size: ${chunk.length}`)\n\n    const start = this.offset\n    const end = start + chunk.length - 1\n\n    Object.values(this.parts).forEach(part => {\n      part.slices\n        .filter(slice => start <= slice.to && end >= slice.from)\n        .sort((a, b) => a.from - b.from)\n        .forEach(slice => {\n          const sliceBegin = Math.max(slice.from - start, 0)\n          const sliceEnd = slice.to < end ? slice.to - start + 1 : chunk.length\n          const sliceSize = sliceEnd - sliceBegin\n\n          const nextOffset = part.offset + sliceSize\n\n          const progress = Math.round(nextOffset / part.size * 10000) / 100\n          \n          log(`chunk ${start}-${end}: ${part.name}: writing ${sliceSize} bytes using slice(${sliceBegin},${sliceEnd}) into ${part.offset}-${nextOffset - 1} / ${progress}%`)\n\n          part.data.set(chunk.slice(sliceBegin, sliceEnd), part.offset)\n\n          part.offset = nextOffset\n        })\n    })\n\n    this.offset += chunk.length\n\n    if (this.parts.preview && this.offset > this.parts.preview.slices[0].to) {\n      this.hasPreview = true\n    }\n\n    if (this.parts.image1.format === 'video') {\n      this.hasVideo = true\n    }\n  }\n\n  getPart (name) {\n    const part = this.parts[name]\n\n    if (!part) {\n      return null\n    }\n\n    const { format, size, data, iv } = part\n\n    return { name, format, size, data, iv }\n  }\n\n  toString () {\n    const result = {\n      version: this.version,\n      metadata: this.metadata,\n      data: this.data,\n      parts: {}\n    }\n\n    for (const key of Object.keys(this.parts)) {\n      const { format, size, iv, slices } = this.parts[key]\n\n      const sliceTable = slices.map(i => `${i.from} - ${i.to}`)\n\n      result.parts[key] = { format, size, iv, slices: sliceTable }\n    }\n\n    return JSON.stringify(result, null, '  ')\n  }\n}\n\nmodule.exports = CHearFile\n\nfunction parse2 (options) {\n  const { reader, addPart, addSlice } = options\n\n  const imageFormat = reader.readString(8).trim()\n  const audioFormat = reader.readString(8).trim()\n\n  const imageSize = reader.readInt64()\n  const audioSize = reader.readInt64()\n\n  const blockSize = reader.readInt32()\n\n  const metaSize = reader.readInt32()\n  const textSize = reader.readInt32()\n\n  // skip metadata format\n  reader.read(8)\n\n  const metadata = reader.readString(metaSize)\n\n  // skip text file format\n  reader.read(8)\n\n  // todo: consider moving position state into addSlice\n  let position = reader.position\n\n  if (textSize > 0) {\n    const textPartName = 'text1'\n    addPart(textPartName, 'text', textSize)\n    addSlice(textPartName, position, textSize)\n    position += textSize\n  }\n\n  return {\n    imageSize,\n    imageFormat,\n    audioSize,\n    audioFormat,\n    blockSize,\n    metadata,\n    position\n  }\n}\n\nfunction parse3 (options) {\n  const { reader, addPart, addSlice } = options\n\n  const imageFormat = reader.readString(8).trim()\n  const audioFormat = reader.readString(8).trim()\n\n  const imageSize = reader.readInt32()\n  const audioSize = reader.readInt32()\n\n  const blockSize = reader.readInt32()\n\n  const metaSize = reader.readInt32()\n  const textSize = reader.readInt32()\n\n  // skip metadata format\n  reader.read(8)\n\n  const metadata = reader.readString(metaSize)\n\n  const previewSize = reader.readInt32()\n\n  let position = reader.position\n\n  if (previewSize > 0) {\n    const previewPartName = 'preview'\n    addPart(previewPartName, 'jpeg', previewSize)\n    addSlice(previewPartName, position, previewSize)\n    position += previewSize\n  }\n\n  // skip text file format\n  position += 8\n\n  if (textSize > 0) {\n    const textPartName = 'text1'\n    addPart(textPartName, 'text', textSize)\n    addSlice(textPartName, position, textSize)\n    position += textSize\n  }\n\n  return {\n    imageSize,\n    imageFormat,\n    audioSize,\n    audioFormat,\n    blockSize,\n    metadata,\n    position\n  }\n}\n\nfunction parse4 (options) {\n  const { reader, addPart, addSlice, log } = options\n\n  const imageFormat = reader.readString(8).trim()\n  const audioFormat = reader.readString(8).trim()\n\n  const imageSize = reader.readInt32()\n  const audioSize = reader.readInt32()\n\n  let imageIv\n\n  const isImageEncrypted = reader.readBoolean()\n\n  if (isImageEncrypted) {\n    log(`detected encrypted image`)\n    imageIv = reader.read(16)\n  }\n\n  let audioIv\n\n  const isAudioEncrypted = reader.readBoolean()\n\n  if (isAudioEncrypted) {\n    log(`detected encrypted audio`)\n    audioIv = reader.read(16)\n  }\n\n  const blockSize = reader.readInt32()\n\n  const metaSize = reader.readInt32()\n\n  log(`metadata size: ${metaSize}`)\n\n  const metadata = reader.readString(metaSize)\n\n  log(`metadata: ${metadata}`)\n\n  const textSize = reader.readInt32()\n\n  log(`data size: ${textSize}`)\n\n  const text = reader.readString(textSize)\n\n  log(`data: ${text}`)\n  \n  const data = new SimpleKv(text)\n\n  const previewSize = reader.readInt32()\n\n  log(`preview image size: ${previewSize}`)\n\n  if (previewSize > 0) {\n    const previewPartName = 'preview'\n    addPart(previewPartName, 'jpeg', previewSize)\n    addSlice(previewPartName, reader.position, previewSize)\n  }\n\n  const position = reader.position + previewSize\n\n  return {\n    imageSize,\n    imageFormat,\n    audioSize,\n    audioFormat,\n    imageIv,\n    audioIv,\n    blockSize,\n    metadata,\n    data,\n    position\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"streamFiles\", function() { return streamFiles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"streamFile\", function() { return streamFile; });\n/* harmony import */ var _services_CHearFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var _services_CHearFile__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_services_CHearFile__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _player_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var _player_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_player_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\n\nconst noop = function(){}\n\nasync function streamFiles (options = {}) {\n  const {\n    selector = 'chear',\n    attribute = 'src',\n    preview = true,\n    previewHandler = onPreview,\n    playerHandler = onStream,\n    blockedHandler = onBlock,\n    debug = false\n  } = options\n\n  const state = await Promise.all(\n    Array.from(document.querySelectorAll(selector))\n      .map(async el => {\n        const url = el.getAttribute(attribute)\n        const { chif } = await streamFile(url, { el, preview, previewHandler, playerHandler, blockedHandler, debug })\n\n        return { el, url, chif }\n      })\n  )\n\n  return state\n}\n\nasync function streamFile (url, options = {}) {\n  let {\n    el,\n    wrapper,\n    preview = true,\n    previewHandler = onPreview,\n    playerHandler = onStream,\n    blockedHandler = onBlock,\n    debug = false\n  } = options\n\n  const log = message => debug ? console.log(`CHIF DEBUG: ${new Date().toISOString()}: ${message}`) : noop()\n  const request = new Request(url)\n  const { body } = await fetch(request)\n  const reader = body.getReader()\n  const chif = new _services_CHearFile__WEBPACK_IMPORTED_MODULE_0___default.a()\n  const firstChunk = await reader.read()\n\n  try {\n    // assume the header will fit inside the first chunk for now\n    await chif.init(firstChunk.value, { debug })\n  } catch (err) {\n    return blockedHandler(err.message, el, wrapper)\n  }\n\n  while (true) {    \n    if (preview && chif.hasPreview) {\n      log('preview image loaded.  streaming cancelled')\n      reader.cancel()\n      break\n    }\n\n    const { done, value } = await reader.read()\n\n    if (done) {\n      break\n    }\n\n    chif.writeChunk(value, log)\n  }\n\n  if (chif.hasPreview && preview) {\n    wrapper = await previewHandler(chif, url, el, wrapper, debug)\n  } else {\n    wrapper = await playerHandler(chif, el, wrapper, debug)\n  }\n\n  return { chif, wrapper }\n}\n\nasync function onBlock (message, el, wrapper) {\n  if (wrapper) {\n    el.removeChild(wrapper)\n  }\n\n  wrapper = document.createElement('div')\n  el.appendChild(wrapper)\n\n  const blockedEl = document.createElement('div')\n  blockedEl.innerText = message\n  blockedEl.style = 'width: 235px; border: 2px solid black; padding: 20px; margin-bottom: 20px;'\n\n  wrapper.insertBefore(blockedEl, null)\n\n  return wrapper\n}\n\nasync function onPreview (chif, url, el, wrapper, debug) {\n  // render image only and bail out with UX for streaming rest of file\n\n  // example markup\n  // <div class=\"chif-preview\">\n  //   <div class=\"overlay\">\n  //     <img src=\"objectURL\">\n  //     <button class=\"water-mark-btn\">\n  //      <svg/>\n  //     </buttom>\n  //     <span class=\"wrap\">\n  //      <svg/>\n  //     </span>\n  //   </div>\n  // </div>\n\n  // if existing div was passed in, remove it and start over\n  if (wrapper) {\n    el.removeChild(wrapper)\n  }\n\n  // create wrapper div around chif content\n  wrapper = document.createElement('div')\n  el.appendChild(wrapper)\n\n  const loadFile = event => {\n    event.preventDefault()\n    streamFile(url, { el, wrapper, preview: false, debug })\n  }\n\n  const previewer = document.createElement('div')\n  previewer.className = 'chif-preview'\n\n  wrapper.insertAdjacentElement('afterbegin', previewer)\n\n  // Thomas\n  wrapper.setAttribute('class', 'chif-container')\n\n  const overlay = document.createElement('div')\n  overlay.className = 'overlay'\n  previewer.insertAdjacentElement('afterbegin', overlay)\n\n  const imgResponse = new Response(chif.getPart('preview').data)\n  const imgBlob = await imgResponse.blob()\n  const imgEl = document.createElement('img')\n  imgEl.src = URL.createObjectURL(imgBlob)\n\n  // set imgEl (preview img tag) alt text if contained in metadata\n  if (chif.metadata.chear && chif.metadata.chear.alt) {\n    let altText = chif.metadata.chear.alt\n    altText += ' Preview \"Click to Download File\"'\n    imgEl.setAttribute('alt', altText)\n  }\n\n  overlay.insertAdjacentElement('afterbegin', imgEl)\n\n  const waterMarkBtn = document.createElement('button')\n  waterMarkBtn.addEventListener('click', loadFile)\n\n  waterMarkBtn.className = 'water-mark-btn'\n  waterMarkBtn.title = 'Click to Stream CHIF'\n  // waterMarkBtn.innerText = 'CHIF' // could instead be something clever like an audio timing, svg icon overlay, etc.\n  waterMarkBtn.innerHTML = `<svg viewBox=\"0 0 90 42\">\n    <path d=\"M45.2084 18.1027C41.7312 18.1027 37.866 20.0395 35.6424 22.9596C34.3142 24.6879 32.986 27.4888 34.1799 30.9601C35.0753 33.5674 36.4483 35.3999 38.3883 36.5769C40.1792 37.6496 42.4475 38.1859 45.3278 38.1859C47.8797 38.1859 52.0434 36.5322 54.1924 34.0739C55.2669 32.8373 55.7295 31.5412 55.5504 30.2301C55.2519 28.0698 54.267 26.3565 52.7 25.3136C51.0137 24.1813 48.7901 23.8834 46.4172 24.4793C44.2384 25.254 41.8954 26.6843 41.8058 28.4274C41.776 29.1872 42.2237 29.8576 43.0296 30.2152C44.3428 30.8112 46.6261 30.6026 49.1333 28.2337C49.7302 27.6676 50.6704 27.6974 51.2375 28.2933C51.8046 28.8892 51.7748 29.8278 51.1778 30.394C49.6108 31.8689 47.9394 32.8373 46.2381 33.2545C44.6413 33.6419 43.1042 33.5227 41.776 32.9267C39.8509 32.0477 38.7167 30.2748 38.8062 28.2784C38.8659 26.9524 39.6419 23.6748 45.477 21.6337C45.5218 21.6188 45.5516 21.6039 45.5964 21.6039C48.8199 20.7845 51.924 21.2165 54.3416 22.8405C56.5951 24.3601 58.0725 26.8333 58.4903 29.8278C58.7888 32.003 58.0725 34.1484 56.4309 36.0405C55.8937 36.6663 55.2669 37.2324 54.5804 37.7538C56.61 37.2473 58.6396 36.5769 60.6393 35.7575C65.1164 33.9249 69.3696 31.3624 73.3243 28.1443C65.1612 21.9912 50.357 18.1474 45.8501 18.1474C45.8203 18.1474 45.7904 18.1474 45.7606 18.1474C45.5815 18.1176 45.4024 18.1027 45.2084 18.1027ZM44.4025 41.9999C38.5227 41.9999 32.6726 40.8229 27.0166 38.4988C21.7486 36.3385 16.7642 33.2396 12.2125 29.2915C11.8842 29.0084 11.7051 28.5913 11.7051 28.1741V28.0549C11.7051 27.6229 11.8991 27.2057 12.2125 26.9375C15.6598 23.9429 18.555 21.8869 21.5845 20.2481C24.9124 18.4603 28.3896 17.2237 32.5085 16.3447C33.3143 16.1808 34.1053 16.6874 34.2695 17.4919C34.4336 18.2964 33.9262 19.086 33.1203 19.2499C26.36 20.6802 21.4203 23.1235 15.436 28.0996C19.3907 31.3326 23.6737 33.8951 28.1508 35.7426C30.4938 36.711 32.8816 37.4559 35.2843 38.0071C33.5382 36.5173 32.2249 34.4762 31.3594 31.9434C30.1058 28.2635 30.7923 24.4346 33.2845 21.1718C36.2394 17.3131 41.3134 14.8996 45.9247 15.1677C51.2226 15.1975 68.1906 19.6373 76.6075 26.9375C76.9358 27.2206 77.1149 27.6378 77.1149 28.0549V28.1741C77.1149 28.6062 76.9209 29.0233 76.6075 29.2915C72.0558 33.2396 67.0714 36.3385 61.8034 38.4988C56.1324 40.808 50.2824 41.9999 44.4025 41.9999Z\"/>\n    <path d=\"M31.412 13.7704C30.662 13.7704 29.9935 13.2917 29.8141 12.5885L27.5803 3.1933C27.3846 2.38543 27.939 1.59252 28.8195 1.41299C29.7 1.23347 30.5642 1.74213 30.7598 2.54999L33.0099 11.9602C33.2056 12.768 32.6512 13.5609 31.7707 13.7405C31.6403 13.7704 31.5262 13.7704 31.412 13.7704Z\"/>\n    <path d=\"M19.8887 18.5902C19.3819 18.5902 18.904 18.312 18.6289 17.8176L13.9663 9.21106C13.5609 8.46938 13.807 7.52684 14.5021 7.09419C15.1971 6.66155 16.0804 6.92423 16.4859 7.6659L21.1485 16.2724C21.5539 17.0141 21.3078 17.9567 20.6127 18.3893C20.381 18.5284 20.1349 18.5902 19.8887 18.5902Z\"/>\n    <path d=\"M58.0847 15.1473C57.9702 15.1473 57.8557 15.1324 57.7413 15.1174C56.8582 14.9376 56.3021 14.1438 56.4984 13.3349L58.7388 3.92836C58.9351 3.11952 59.8018 2.61025 60.6849 2.78999C61.568 2.96973 62.124 3.7636 61.9278 4.57244L59.6873 13.979C59.5074 14.668 58.837 15.1473 58.0847 15.1473Z\"/>\n    <path d=\"M69.6157 19.2786C69.3691 19.2786 69.1225 19.2168 68.8904 19.0777C68.1942 18.6448 67.9621 17.7017 68.3538 16.9596L73.0243 8.34797C73.4304 7.60585 74.3152 7.35848 75.0115 7.77592C75.7077 8.20882 75.9398 9.15192 75.5481 9.89403L70.8776 18.5056C70.602 19.0004 70.1088 19.2786 69.6157 19.2786Z\"/>\n    <path d=\"M8.86148 26.1637C8.53868 26.1637 8.21588 26.0593 7.95177 25.8355L0.556669 19.8677C-0.0742629 19.3604 -0.191646 18.4205 0.321902 17.7789C0.820778 17.1374 1.74517 17.018 2.3761 17.5402L9.7712 23.508C10.4021 24.0153 10.5195 24.9552 10.006 25.5968C9.71251 25.9698 9.287 26.1637 8.86148 26.1637Z\"/>\n    <path d=\"M80.0516 26.1637C79.5972 26.1637 79.1271 25.9696 78.8294 25.5964C78.2966 24.9544 78.4063 24.0138 79.0801 23.5062L86.9776 17.5341C87.6514 17.0265 88.6386 17.131 89.1714 17.773C89.7042 18.415 89.5945 19.3556 88.9207 19.8632L81.0231 25.8353C80.7411 26.0592 80.3963 26.1637 80.0516 26.1637Z\"/>\n    <path d=\"M44.754 12.3934C43.9966 12.3934 43.377 11.7319 43.377 10.9233V1.47016C43.377 0.661572 43.9966 0 44.754 0C45.5114 0 46.1311 0.661572 46.1311 1.47016V10.9233C46.1311 11.7319 45.5114 12.3934 44.754 12.3934Z\"/>\n    <path d=\"M79.8789 33.1116V33.8814H80.1968C80.3809 33.8814 80.5315 33.8646 80.6152 33.7977C80.6989 33.7308 80.7491 33.6304 80.7491 33.5132C80.7491 33.3793 80.6989 33.2789 80.5985 33.212C80.498 33.145 80.3474 33.1116 80.1466 33.1116H79.8789ZM79.2262 32.7099H80.2805C80.6654 32.7099 80.9499 32.7769 81.1507 32.9108C81.3515 33.0279 81.4352 33.2287 81.4352 33.4965C81.4352 33.6638 81.385 33.8312 81.2679 33.9483C81.1674 34.0655 81.0168 34.1659 80.8327 34.1993L81.4352 35.3875H80.7156L80.2136 34.283H79.8956V35.3875H79.2429V32.7099H79.2262ZM80.2303 32.074C79.9625 32.074 79.6948 32.1242 79.4605 32.2246C79.2262 32.325 79.0086 32.4589 78.8245 32.643C78.6237 32.8438 78.4731 33.0614 78.3727 33.3124C78.2556 33.5634 78.2054 33.8144 78.2054 34.0822C78.2054 34.35 78.2556 34.601 78.356 34.852C78.4564 35.103 78.607 35.3039 78.7911 35.4879C78.9919 35.6888 79.1927 35.8394 79.4437 35.9398C79.6948 36.0402 79.9458 36.1071 80.2136 36.1071C80.4646 36.1071 80.7156 36.0569 80.9666 35.9565C81.2177 35.8561 81.4352 35.7055 81.636 35.5214C81.8201 35.3373 81.9707 35.1198 82.0711 34.8855C82.1715 34.6345 82.2385 34.4002 82.2385 34.1324C82.2385 33.8479 82.1883 33.5802 82.0879 33.3459C81.9875 33.0948 81.8536 32.894 81.6528 32.6932C81.4519 32.4924 81.2511 32.3418 81.0001 32.2414C80.7658 32.1242 80.5148 32.074 80.2303 32.074ZM80.2303 31.6724C80.565 31.6724 80.8662 31.7393 81.1674 31.8564C81.4687 31.9736 81.7197 32.1577 81.954 32.392C82.1715 32.6095 82.3556 32.8773 82.456 33.1618C82.5732 33.4463 82.6234 33.7475 82.6234 34.0822C82.6234 34.4169 82.5564 34.7181 82.4393 35.0194C82.3222 35.3206 82.1381 35.5716 81.9038 35.7892C81.6695 36.0067 81.4185 36.1908 81.1172 36.3079C80.816 36.4251 80.5148 36.492 80.1968 36.492C79.8788 36.492 79.5609 36.4251 79.2764 36.3079C78.9752 36.1908 78.7241 36.0067 78.4898 35.7724C78.2723 35.5549 78.0882 35.2871 77.9711 35.0026C77.8539 34.7181 77.8037 34.4169 77.8037 34.0989C77.8037 33.8814 77.8204 33.6638 77.8874 33.463C77.9543 33.2454 78.038 33.0614 78.1384 32.8438C78.356 32.4756 78.6405 32.1911 79.0086 31.9736C79.3935 31.7728 79.7952 31.6724 80.2303 31.6724Z\"/>\n    </svg>`\n\n  overlay.insertAdjacentElement('beforeend', waterMarkBtn)\n\n  const wrapSpan = document.createElement('span')\n  wrapSpan.addEventListener('click', loadFile)\n\n  wrapSpan.className = 'wrap'\n  wrapSpan.title = 'Click to Stream CHIF'\n  wrapSpan.innerHTML = `<svg viewBox=\"0 0 194 193\">\n  <path d=\"M194 96.5C194 149.808 150.585 193 97 193C43.4153 193 0 149.808 0 96.5C0 43.1915 43.4153 0 97 0C150.585 0 194 43.1915 194 96.5ZM79.7903 51.3629V96.5H52.0593C47.8742 96.5 45.7621 101.558 48.7347 104.477L93.6754 148.952C95.5137 150.781 98.4472 150.781 100.285 148.952L145.226 104.477C148.199 101.52 146.087 96.5 141.902 96.5H114.21V51.3629C114.21 48.7948 112.098 46.6935 109.516 46.6935H84.4839C81.9024 46.6935 79.7903 48.7948 79.7903 51.3629Z\"/>\n  </svg>\n  `\n  overlay.insertAdjacentElement('beforeend', wrapSpan)\n\n  return wrapper\n}\n\nasync function onStream (chif, el, wrapper, debug) {\n  // if existing div was passed in, remove it and start over\n  if (wrapper) {\n    el.removeChild(wrapper)\n  }\n\n  // create wrapper div around chif content\n  wrapper = document.createElement('div')\n  wrapper.setAttribute('class', 'chif-container')\n  el.appendChild(wrapper)\n\n  const imagePart = chif.getPart('image1')\n\n  if (imagePart.format === 'video') {\n    videoPlayer(chif, wrapper, imagePart, debug)\n  } else {\n    imagePlayer(chif, wrapper, imagePart, debug)\n  }\n\n  return wrapper\n}\n\nasync function videoPlayer (chif, wrapper, imagePart, debug) {\n  const imgResponse = new Response(imagePart.data)\n  const imgBlob = await imgResponse.blob()\n  const videoBlob = new Blob([imgBlob], { type: 'video/mp4' })\n\n  const videoEl = document.createElement('video')\n  videoEl.setAttribute('src', URL.createObjectURL(videoBlob))\n  videoEl.setAttribute('controls', '')\n  videoEl.setAttribute('class', 'video')\n\n  const audioResponse = new Response(chif.getPart('audio1').data)\n  const audioBlob = await audioResponse.blob()\n  const mp3Blob = new Blob([audioBlob], { type: 'audio/mp3' })\n\n  const audioEl = document.createElement('audio')\n  audioEl.setAttribute('src', URL.createObjectURL(mp3Blob))\n  audioEl.setAttribute('controls', '')\n\n  wrapper.insertAdjacentElement('beforeend', videoEl)\n  wrapper.insertAdjacentElement('beforeend', audioEl)\n}\n\nasync function imagePlayer (chif, wrapper, imagePart, debug) {\n  const imgResponse = new Response(imagePart.data)\n  const imgBlob = await imgResponse.blob()\n\n  const imgEl = document.createElement('img')\n  imgEl.src = URL.createObjectURL(imgBlob)\n\n  // set imgEl (img tag) alt text if contained in metadata\n  if (chif.metadata.chear && chif.metadata.chear.alt) {\n    imgEl.setAttribute('alt', chif.metadata.chear.alt)\n  }\n\n  wrapper.insertBefore(imgEl, null)\n\n  const audioResponse = new Response(chif.getPart('audio1').data)\n  const audioBlob = await audioResponse.blob()\n\n  const mp3AudioBlob = new Blob([audioBlob], { type: 'audio/mp3' })\n  const audioUrl = URL.createObjectURL(mp3AudioBlob)\n\n  const music = new Audio()\n  music.type = 'audio/mp3'\n  music.preload = 'auto'\n  music.src = audioUrl\n  // music.volume = 0.00000001;\n  music.volume = 1\n  // temp\n  music.load()\n\n  const playerEl = document.createElement('div')\n  playerEl.setAttribute('class', 'audioplayer')\n\n  playerEl.innerHTML = `\n    <button class=\"pButton play\" alt=\"play button\"></button>\n    <button class=\"rrButton rr\" alt=\"rewind button\">\n    <svg viewBox=\"0 0 512 512\">\n    <path d=\"M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z\">\n    </path>\n    </svg>\n    </button>\n    <button class=\"ffButton ff\" alt=\"fast forward button\">\n    <svg viewBox=\"0 0 512 512\">\n    <path d=\"M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z\">\n    </path>\n    </svg>\n    </button>\n    <div class=\"timedisplay\">\n    <span class=\"current-time\"></span>\n    /\n            <span class=\"duration-time\"></span>  \n        </div>\n        `\n\n  // SVG Text\n  const openText =\n    '<svg viewBox=\"0 0 512 512\"><path d=\"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z\"></path></svg>'\n  // SVG closeText\n  const closeText =\n    '<svg viewBox=\"0 0 640 512\"><path d=\"M64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8-2.2 2.3-2.8 5.7-1.5 8.7 1.3 2.9 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 27.4 0 53.7-3.6 78.4-10L72.9 186.4c-5.6 17.1-8.9 35-8.9 53.6zm569.8 218.1l-114.4-88.4C554.6 334.1 576 289.2 576 240c0-114.9-114.6-208-256-208-65.1 0-124.2 20.1-169.4 52.7L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"></path></svg>'\n\n  let textValue = ''\n\n  try {\n    // try to get text1 part first, then fall back to kv\n    const textPart = chif.getPart('text1')\n\n    if (textPart && textPart.data) {\n      const textResponse = new Response(textPart.data)\n      textValue = await textResponse.text()\n    } else if (chif.data) {\n      textValue = await chif.data.get('transcript')\n    }\n  } catch (err) {\n    console.log(`Error during text fetch: ${err.stack}`)\n    textValue = ''\n  }\n\n  const textEl = document.createElement('div')\n  textEl.setAttribute('class', 'transcription')\n  textEl.classList.add('hidden')\n  textEl.innerHTML = textValue.replace(/\\n/g, '<br />')\n\n  // Create container for timeline with timeline.\n  const timeTray = document.createElement('div')\n  timeTray.setAttribute('class', 'time-tray')\n  timeTray.innerHTML = `\n    <div class=\"timeline\">\n        <div class=\"playhead\"></div>\n    </div>\n    `\n\n  // Create container for audioplayer with toggle buttons for audio & transcription.\n  const audioPlayerTray = document.createElement('div')\n  audioPlayerTray.setAttribute('class', 'player-tray')\n\n  // Make transcript icon and add it to the audioPlayerTray\n  const transcriptIcon = document.createElement('button')\n  transcriptIcon.setAttribute('class', 'transcript-button transcript-icon')\n  transcriptIcon.addEventListener('click', toggleTranscript)\n  document.body.appendChild(transcriptIcon)\n\n  // Set SVG\n  transcriptIcon.innerHTML = openText\n\n  function toggleTranscript (event) {\n    const el = wrapper.querySelector('.transcription')\n    el.classList.toggle('hidden')\n    if (transcriptIcon.innerHTML === openText) {\n      transcriptIcon.innerHTML = closeText\n    } else {\n      transcriptIcon.innerHTML = openText\n    }\n  }\n\n  // Fill audioPlayerTray with soundIcon, audioplayer, & transcriptIcon\n  wrapper.appendChild(audioPlayerTray)\n  audioPlayerTray.appendChild(playerEl)\n  audioPlayerTray.appendChild(transcriptIcon)\n\n  // Add audioPlayerTray & transcript to chif-container\n  wrapper.insertBefore(timeTray, null)\n  wrapper.insertBefore(audioPlayerTray, null)\n  wrapper.insertBefore(textEl, null)\n\n  // SVG Play\n  const playSVG =\n    '<svg viewBox=\"0 0 448 512\"><path d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"></path></svg>'\n  // SVG Play\n  const pauseSVG =\n    '<svg viewBox=\"0 0 448 512\"><path d=\"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"></path></svg>'\n\n  // Duration of audio clip, calculated here for embedding purposes\n  var duration = music.duration\n\n  // play button\n  var pButton = wrapper\n    .querySelector('.player-tray')\n    .querySelector('.audioplayer')\n    .querySelector('.pButton')\n  // Append Play SVG Initially\n  pButton.innerHTML = playSVG\n\n  // rewind button\n  var rrButton = wrapper\n    .querySelector('.player-tray')\n    .querySelector('.audioplayer')\n    .querySelector('.rrButton')\n\n  // fastforward button\n  var ffButton = wrapper\n    .querySelector('.player-tray')\n    .querySelector('.audioplayer')\n    .querySelector('.ffButton')\n\n  // time display - current time\n  var currentTime = wrapper\n    .querySelector('.player-tray')\n    .querySelector('.audioplayer')\n    .querySelector('.timedisplay')\n    .querySelector('.current-time')\n\n  // time display - duration time\n  var durationTime = wrapper\n    .querySelector('.player-tray')\n    .querySelector('.audioplayer')\n    .querySelector('.timedisplay')\n    .querySelector('.duration-time')\n\n  // configure time into readable text\n  const timeDisplayConfig = (time, initialize) => {\n    if (time === 0 || initialize === true) {\n      return '00:00'\n    }\n\n    let remainder\n    let string\n    let split\n    let minutes\n    let seconds\n\n    remainder = time\n    string = remainder / (60 * 60) + ''\n    split = string.split('.')\n\n    remainder = Number(`0.${split[1]}`)\n    string = remainder * 60 + ''\n    split = string.split('.')\n    minutes = Number(split[0])\n\n    if (minutes <= 9) {\n      minutes = '0' + minutes\n    }\n\n    if (minutes === 0) {\n      minutes = '00'\n    }\n\n    remainder = Number(`0.${split[1]}`)\n    seconds = Math.floor(remainder * 60)\n\n    if (seconds <= 9) {\n      seconds = '0' + seconds\n    }\n\n    if (seconds === 0) {\n      seconds = '00'\n    }\n\n    return `${minutes}:${seconds}`\n  }\n\n  var playhead = wrapper\n    .querySelector('.time-tray')\n    .querySelector('.timeline')\n    .querySelector('.playhead')\n\n  var timeline = wrapper.querySelector('.time-tray').querySelector('.timeline')\n\n  // timeline width adjusted for playhead\n  var timelineWidth = timeline.offsetWidth - playhead.offsetWidth\n\n  // play button event listenter\n  pButton.addEventListener('click', play)\n\n  // rewind button event listenter\n  rrButton.addEventListener('click', rewind)\n\n  // fastforward button event listenter\n  ffButton.addEventListener('click', fastforward)\n\n  // timeupdate event listener\n  music.addEventListener('timeupdate', timeUpdate, false)\n\n  // makes timeline clickable\n  timeline.addEventListener(\n    'click',\n    function (event) {\n      moveplayhead(event)\n      music.currentTime = duration * clickPercent(event)\n    },\n    false\n  )\n\n  // returns click as decimal (.77) of the total timelineWidth\n  function clickPercent (event) {\n    return (event.clientX - getPosition(timeline)) / timelineWidth\n  }\n\n  // makes playhead draggable\n  playhead.addEventListener('mousedown', mouseDown, false)\n\n  // target.parentNode.addEventListener('mouseup', mouseUp, false);\n  wrapper.addEventListener('mouseup', mouseUp, false)\n\n  // Boolean value so that audio position is updated only when the playhead is released\n  var onplayhead = false\n\n  // mouseDown EventListener\n  function mouseDown () {\n    onplayhead = true\n    wrapper.addEventListener('mousemove', moveplayhead, true)\n    music.removeEventListener('timeupdate', timeUpdate, false)\n  }\n\n  // mouseUp EventListener\n  // getting input from all mouse clicks\n  function mouseUp (event) {\n    if (onplayhead === true) {\n      moveplayhead(event)\n      wrapper.removeEventListener('mousemove', moveplayhead, true)\n      // change current time\n      music.currentTime = duration * clickPercent(event)\n      music.addEventListener('timeupdate', timeUpdate, false)\n    }\n    onplayhead = false\n  }\n\n  // mousemove EventListener\n  // Moves playhead as user drags\n  function moveplayhead (event) {\n    var newMargLeft = event.clientX - getPosition(timeline)\n\n    if (newMargLeft >= 0 && newMargLeft <= timelineWidth) {\n      playhead.style.marginLeft = newMargLeft + 'px'\n    }\n    if (newMargLeft < 0) {\n      playhead.style.marginLeft = '0px'\n    }\n    if (newMargLeft > timelineWidth) {\n      playhead.style.marginLeft = timelineWidth + 'px'\n    }\n  }\n  // timeUpdate\n  // Synchronizes playhead position with current point in audio\n  // Synchronizes time display with current point in audio\n  function timeUpdate (updateTime) {\n    var playPercent = timelineWidth * (music.currentTime / duration)\n    playhead.style.marginLeft = playPercent + 'px'\n    currentTime.innerText = timeDisplayConfig(music.currentTime)\n    if (music.currentTime === duration) {\n      pButton.classList.remove('pause')\n      pButton.classList.add('play')\n      pButton.innerHTML = playSVG\n    }\n    if (updateTime) {\n      playPercent -= updateTime\n    }\n  }\n\n  // Play and Pause\n  function play () {\n    // start music\n    if (music.paused) {\n      // by Charles\n      music.play().catch(err => {\n        console.log(err)\n        // Do something if browser is not supported or playback fails.\n      })\n\n      // remove play, add pause\n      pButton.classList.remove('play')\n      pButton.classList.add('pause')\n      pButton.innerHTML = pauseSVG\n    } else {\n      // pause music\n      music.pause()\n      // remove pause, add play\n\n      pButton.classList.remove('pause')\n      pButton.classList.add('play')\n      pButton.innerHTML = playSVG\n    }\n  }\n\n  // rewind\n  function rewind () {\n    music.currentTime -= 3\n  }\n\n  // fastforward\n  function fastforward () {\n    music.currentTime += 3\n  }\n\n  // Gets audio file duration\n  music.addEventListener(\n    'canplaythrough',\n    function () {\n      duration = music.duration\n      // Set Duration Time\n      durationTime.innerText = timeDisplayConfig(duration)\n      // On load set initial value of currentTime to zero in correct format\n      if (music.currentTime === 0) {\n        currentTime.innerText = timeDisplayConfig(duration, true)\n      }\n      // timeline width adjusted for time display\n      timelineWidth = timeline.offsetWidth - playhead.offsetWidth\n    },\n    false\n  )\n\n  // getPosition\n  // Returns elements left position relative to top-left of viewport\n  function getPosition (el) {\n    return el.getBoundingClientRect().left\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports){eval("class ByteReader {\n  constructor (value, position = 0) {\n    this.length = value.length\n    this.value = value\n    this.position = position\n    this.viewer = new DataView(value.buffer)\n  }\n\n  // Updates Position\n  move (position) {\n    if(position > this.length - 1) {\n      throw new Error(`move(${postition}) is invalid since it exceeds length of buffer ${this.length}`)\n    }\n\n    this.position = position\n  }\n\n  readString (length) {\n    // String.fromCharCode() method returns a string created from the specified sequence of UTF-16 code units\n    const response = String.fromCharCode.apply(null, this.read(length))\n    return response\n  }\n\n  readInt16 () {\n    const length = 2\n    this.assertRead(length)\n    \n    const value = this.viewer.getUint16(this.position)\n    this.position += length\n    return value\n  }\n\n  readInt32 () {\n    const length = 4\n    this.assertRead(length)\n\n    const value = this.viewer.getUint32(this.position)\n    this.position += length\n    return value\n  }\n\n  readInt64 () {\n    const length = 8\n    this.assertRead(length)\n\n    const left = this.viewer.getUint32(this.position)\n    const right = this.viewer.getUint32(this.position + 4)\n\n    const value = 2 ** 32 * left + right\n\n    if (!Number.isSafeInteger(value)) { throw new Error('value exceeded safe integer size') }\n\n    this.position += length\n\n    return value\n  }\n\n  readBoolean () {\n    const length = 1\n    this.assertRead(length)\n\n    const value = this.viewer.getUint8(this.position)\n    this.position += length\n    return value === 1\n  }\n\n  read (length) {\n    if (length === 0) {\n      return null\n    }\n\n    this.assertRead(length)\n\n    const value = this.value.slice(this.position, this.position + length)\n    this.position += length\n    return value\n  }\n\n  assertRead(length) {\n    if(this.position + length > this.length - 1) {\n      throw new Error(`cannot read ${length} bytes from position ${this.position} since it exceeded the length of the current buffer size of ${this.length}`)\n    }\n  }\n}\n\nmodule.exports = ByteReader\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vc2VydmljZXMvQnl0ZVJlYWRlci5qcz9hZGViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixVQUFVLGlEQUFpRCxZQUFZO0FBQ3JHOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLHVDQUF1Qzs7QUFFdkM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxPQUFPLHVCQUF1QixjQUFjLDhEQUE4RCxZQUFZO0FBQzNKO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQnl0ZVJlYWRlciB7XG4gIGNvbnN0cnVjdG9yICh2YWx1ZSwgcG9zaXRpb24gPSAwKSB7XG4gICAgdGhpcy5sZW5ndGggPSB2YWx1ZS5sZW5ndGhcbiAgICB0aGlzLnZhbHVlID0gdmFsdWVcbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb25cbiAgICB0aGlzLnZpZXdlciA9IG5ldyBEYXRhVmlldyh2YWx1ZS5idWZmZXIpXG4gIH1cblxuICAvLyBVcGRhdGVzIFBvc2l0aW9uXG4gIG1vdmUgKHBvc2l0aW9uKSB7XG4gICAgaWYocG9zaXRpb24gPiB0aGlzLmxlbmd0aCAtIDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgbW92ZSgke3Bvc3RpdGlvbn0pIGlzIGludmFsaWQgc2luY2UgaXQgZXhjZWVkcyBsZW5ndGggb2YgYnVmZmVyICR7dGhpcy5sZW5ndGh9YClcbiAgICB9XG5cbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb25cbiAgfVxuXG4gIHJlYWRTdHJpbmcgKGxlbmd0aCkge1xuICAgIC8vIFN0cmluZy5mcm9tQ2hhckNvZGUoKSBtZXRob2QgcmV0dXJucyBhIHN0cmluZyBjcmVhdGVkIGZyb20gdGhlIHNwZWNpZmllZCBzZXF1ZW5jZSBvZiBVVEYtMTYgY29kZSB1bml0c1xuICAgIGNvbnN0IHJlc3BvbnNlID0gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCB0aGlzLnJlYWQobGVuZ3RoKSlcbiAgICByZXR1cm4gcmVzcG9uc2VcbiAgfVxuXG4gIHJlYWRJbnQxNiAoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gMlxuICAgIHRoaXMuYXNzZXJ0UmVhZChsZW5ndGgpXG4gICAgXG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLnZpZXdlci5nZXRVaW50MTYodGhpcy5wb3NpdGlvbilcbiAgICB0aGlzLnBvc2l0aW9uICs9IGxlbmd0aFxuICAgIHJldHVybiB2YWx1ZVxuICB9XG5cbiAgcmVhZEludDMyICgpIHtcbiAgICBjb25zdCBsZW5ndGggPSA0XG4gICAgdGhpcy5hc3NlcnRSZWFkKGxlbmd0aClcblxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy52aWV3ZXIuZ2V0VWludDMyKHRoaXMucG9zaXRpb24pXG4gICAgdGhpcy5wb3NpdGlvbiArPSBsZW5ndGhcbiAgICByZXR1cm4gdmFsdWVcbiAgfVxuXG4gIHJlYWRJbnQ2NCAoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gOFxuICAgIHRoaXMuYXNzZXJ0UmVhZChsZW5ndGgpXG5cbiAgICBjb25zdCBsZWZ0ID0gdGhpcy52aWV3ZXIuZ2V0VWludDMyKHRoaXMucG9zaXRpb24pXG4gICAgY29uc3QgcmlnaHQgPSB0aGlzLnZpZXdlci5nZXRVaW50MzIodGhpcy5wb3NpdGlvbiArIDQpXG5cbiAgICBjb25zdCB2YWx1ZSA9IDIgKiogMzIgKiBsZWZ0ICsgcmlnaHRcblxuICAgIGlmICghTnVtYmVyLmlzU2FmZUludGVnZXIodmFsdWUpKSB7IHRocm93IG5ldyBFcnJvcigndmFsdWUgZXhjZWVkZWQgc2FmZSBpbnRlZ2VyIHNpemUnKSB9XG5cbiAgICB0aGlzLnBvc2l0aW9uICs9IGxlbmd0aFxuXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICByZWFkQm9vbGVhbiAoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gMVxuICAgIHRoaXMuYXNzZXJ0UmVhZChsZW5ndGgpXG5cbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMudmlld2VyLmdldFVpbnQ4KHRoaXMucG9zaXRpb24pXG4gICAgdGhpcy5wb3NpdGlvbiArPSBsZW5ndGhcbiAgICByZXR1cm4gdmFsdWUgPT09IDFcbiAgfVxuXG4gIHJlYWQgKGxlbmd0aCkge1xuICAgIGlmIChsZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgdGhpcy5hc3NlcnRSZWFkKGxlbmd0aClcblxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy52YWx1ZS5zbGljZSh0aGlzLnBvc2l0aW9uLCB0aGlzLnBvc2l0aW9uICsgbGVuZ3RoKVxuICAgIHRoaXMucG9zaXRpb24gKz0gbGVuZ3RoXG4gICAgcmV0dXJuIHZhbHVlXG4gIH1cblxuICBhc3NlcnRSZWFkKGxlbmd0aCkge1xuICAgIGlmKHRoaXMucG9zaXRpb24gKyBsZW5ndGggPiB0aGlzLmxlbmd0aCAtIDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IHJlYWQgJHtsZW5ndGh9IGJ5dGVzIGZyb20gcG9zaXRpb24gJHt0aGlzLnBvc2l0aW9ufSBzaW5jZSBpdCBleGNlZWRlZCB0aGUgbGVuZ3RoIG9mIHRoZSBjdXJyZW50IGJ1ZmZlciBzaXplIG9mICR7dGhpcy5sZW5ndGh9YClcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCeXRlUmVhZGVyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,exports){eval("module.exports = {\n  getBlockSizes,\n  getBlockSize\n}\n\nfunction getBlockSizes (imageSize, audioSize, blockSize) {\n  let blockCount = 1\n  let imageBlockSize = 1\n  let audioBlockSize = 1\n\n  if (imageSize <= audioSize) {\n    imageBlockSize = blockSize\n    blockCount = Math.floor(imageSize / imageBlockSize)\n    audioBlockSize = Math.floor(audioSize / blockCount)\n  } else {\n    audioBlockSize = blockSize\n    blockCount = Math.floor(audioSize / audioBlockSize)\n    imageBlockSize = Math.floor(imageSize / blockCount)\n  }\n\n  const imageTailSize = imageSize - blockCount * imageBlockSize\n  const audioTailSize = audioSize - blockCount * audioBlockSize\n\n  return {\n    blockCount,\n    blockSize,\n    imageBlockSize,\n    audioBlockSize,\n    imageTailSize,\n    audioTailSize\n  }\n}\n\nfunction getBlockSize (imageSize, audioSize) {\n  const minFileSize = Math.min(imageSize, audioSize)\n\n  const largeBlockSize = 1024\n  const mediumBlockSize = 256\n  const smallBlockSize = 1\n\n  const blockSize =\n    minFileSize >= largeBlockSize * 2\n      ? largeBlockSize\n      : minFileSize > mediumBlockSize\n        ? mediumBlockSize\n        : smallBlockSize\n\n  return blockSize\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vc2VydmljZXMvY2hpZkJsZW5kZXIuanM/NjJmNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldEJsb2NrU2l6ZXMsXG4gIGdldEJsb2NrU2l6ZVxufVxuXG5mdW5jdGlvbiBnZXRCbG9ja1NpemVzIChpbWFnZVNpemUsIGF1ZGlvU2l6ZSwgYmxvY2tTaXplKSB7XG4gIGxldCBibG9ja0NvdW50ID0gMVxuICBsZXQgaW1hZ2VCbG9ja1NpemUgPSAxXG4gIGxldCBhdWRpb0Jsb2NrU2l6ZSA9IDFcblxuICBpZiAoaW1hZ2VTaXplIDw9IGF1ZGlvU2l6ZSkge1xuICAgIGltYWdlQmxvY2tTaXplID0gYmxvY2tTaXplXG4gICAgYmxvY2tDb3VudCA9IE1hdGguZmxvb3IoaW1hZ2VTaXplIC8gaW1hZ2VCbG9ja1NpemUpXG4gICAgYXVkaW9CbG9ja1NpemUgPSBNYXRoLmZsb29yKGF1ZGlvU2l6ZSAvIGJsb2NrQ291bnQpXG4gIH0gZWxzZSB7XG4gICAgYXVkaW9CbG9ja1NpemUgPSBibG9ja1NpemVcbiAgICBibG9ja0NvdW50ID0gTWF0aC5mbG9vcihhdWRpb1NpemUgLyBhdWRpb0Jsb2NrU2l6ZSlcbiAgICBpbWFnZUJsb2NrU2l6ZSA9IE1hdGguZmxvb3IoaW1hZ2VTaXplIC8gYmxvY2tDb3VudClcbiAgfVxuXG4gIGNvbnN0IGltYWdlVGFpbFNpemUgPSBpbWFnZVNpemUgLSBibG9ja0NvdW50ICogaW1hZ2VCbG9ja1NpemVcbiAgY29uc3QgYXVkaW9UYWlsU2l6ZSA9IGF1ZGlvU2l6ZSAtIGJsb2NrQ291bnQgKiBhdWRpb0Jsb2NrU2l6ZVxuXG4gIHJldHVybiB7XG4gICAgYmxvY2tDb3VudCxcbiAgICBibG9ja1NpemUsXG4gICAgaW1hZ2VCbG9ja1NpemUsXG4gICAgYXVkaW9CbG9ja1NpemUsXG4gICAgaW1hZ2VUYWlsU2l6ZSxcbiAgICBhdWRpb1RhaWxTaXplXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0QmxvY2tTaXplIChpbWFnZVNpemUsIGF1ZGlvU2l6ZSkge1xuICBjb25zdCBtaW5GaWxlU2l6ZSA9IE1hdGgubWluKGltYWdlU2l6ZSwgYXVkaW9TaXplKVxuXG4gIGNvbnN0IGxhcmdlQmxvY2tTaXplID0gMTAyNFxuICBjb25zdCBtZWRpdW1CbG9ja1NpemUgPSAyNTZcbiAgY29uc3Qgc21hbGxCbG9ja1NpemUgPSAxXG5cbiAgY29uc3QgYmxvY2tTaXplID1cbiAgICBtaW5GaWxlU2l6ZSA+PSBsYXJnZUJsb2NrU2l6ZSAqIDJcbiAgICAgID8gbGFyZ2VCbG9ja1NpemVcbiAgICAgIDogbWluRmlsZVNpemUgPiBtZWRpdW1CbG9ja1NpemVcbiAgICAgICAgPyBtZWRpdW1CbG9ja1NpemVcbiAgICAgICAgOiBzbWFsbEJsb2NrU2l6ZVxuXG4gIHJldHVybiBibG9ja1NpemVcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval("const { decryptValue } = __webpack_require__(5)\n\nclass SimpleKv {\n  constructor (value) {\n    if (!value) {\n      return null\n    }\n\n    const store = (typeof value === 'string')\n      ? JSON.parse(value)\n      : value\n\n    this.store = store\n  }\n\n  async get (key, options = {}) {\n    const exists = key in this.store\n\n    if (!exists) {\n      return null\n    }\n\n    const item = this.store[key]\n\n    let result\n\n    if (item.e) {\n      if (!options.crypto || !options.crypto.passphrase) {\n        throw new Error('Missing crypto passphrase for cipher')\n      }\n\n      result = await decryptValue(item.v, options.crypto.passphrase)\n    } else {\n      result = item.v\n    }\n\n    return result\n  }\n}\n\nmodule.exports = SimpleKv\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vc2VydmljZXMvU2ltcGxlS3YuanM/MmMxNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLGVBQWUsR0FBRyxtQkFBTyxDQUFDLENBQW9DOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDhCQUE4QjtBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZGVjcnlwdFZhbHVlIH0gPSByZXF1aXJlKCcuL2VuY3J5cHRpb24vbm9kZUVuY3J5cHRpb25TZXJ2aWNlJylcblxuY2xhc3MgU2ltcGxlS3Yge1xuICBjb25zdHJ1Y3RvciAodmFsdWUpIHtcbiAgICBpZiAoIXZhbHVlKSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IHN0b3JlID0gKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICA/IEpTT04ucGFyc2UodmFsdWUpXG4gICAgICA6IHZhbHVlXG5cbiAgICB0aGlzLnN0b3JlID0gc3RvcmVcbiAgfVxuXG4gIGFzeW5jIGdldCAoa2V5LCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBleGlzdHMgPSBrZXkgaW4gdGhpcy5zdG9yZVxuXG4gICAgaWYgKCFleGlzdHMpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuXG4gICAgY29uc3QgaXRlbSA9IHRoaXMuc3RvcmVba2V5XVxuXG4gICAgbGV0IHJlc3VsdFxuXG4gICAgaWYgKGl0ZW0uZSkge1xuICAgICAgaWYgKCFvcHRpb25zLmNyeXB0byB8fCAhb3B0aW9ucy5jcnlwdG8ucGFzc3BocmFzZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgY3J5cHRvIHBhc3NwaHJhc2UgZm9yIGNpcGhlcicpXG4gICAgICB9XG5cbiAgICAgIHJlc3VsdCA9IGF3YWl0IGRlY3J5cHRWYWx1ZShpdGVtLnYsIG9wdGlvbnMuY3J5cHRvLnBhc3NwaHJhc2UpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCA9IGl0ZW0udlxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNpbXBsZUt2XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")},function(module,exports){eval("module.exports = {\n  decryptValue\n}\n\nasync function decryptValue (input, password) {\n  return input\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vc2VydmljZXMvZW5jcnlwdGlvbi9ub2RlRW5jcnlwdGlvblNlcnZpY2UuanM/YzE4ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVjcnlwdFZhbHVlXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHRWYWx1ZSAoaW5wdXQsIHBhc3N3b3JkKSB7XG4gIHJldHVybiBpbnB1dFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval("var api = __webpack_require__(7);\n            var content = __webpack_require__(8);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vcGxheWVyL3BsYXllci5jc3M/YmU5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsQ0FBd0U7QUFDMUYsMEJBQTBCLG1CQUFPLENBQUMsQ0FBdUQ7O0FBRXpGOztBQUVBO0FBQ0EsMEJBQTBCLFFBQVM7QUFDbkM7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7OztBQUlBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcGxheWVyLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixLQUF3QyxHQUFHLHNCQUFpQixHQUFHLFNBQUk7O0FBRW5GO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBLHFFQUFxRSxxQkFBcUIsYUFBYTs7QUFFdkc7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBLHlEQUF5RDtBQUN6RCxHQUFHOztBQUVIOzs7QUFHQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLDRCQUE0QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IsNkJBQTZCO0FBQ2pEOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgdmFyIG1lbW87XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSgpIHtcbiAgICBpZiAodHlwZW9mIG1lbW8gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuICAgICAgLy8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuICAgICAgLy8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuICAgICAgLy8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG4gICAgICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcbiAgICAgIG1lbW8gPSBCb29sZWFuKHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtbztcbiAgfTtcbn0oKTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uIGdldFRhcmdldCgpIHtcbiAgdmFyIG1lbW8gPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVtb1t0YXJnZXRdO1xuICB9O1xufSgpO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgdmFyIGF0dHJpYnV0ZXMgPSBvcHRpb25zLmF0dHJpYnV0ZXMgfHwge307XG5cbiAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gJ3VuZGVmaW5lZCcgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgICBpZiAobm9uY2UpIHtcbiAgICAgIGF0dHJpYnV0ZXMubm9uY2UgPSBub25jZTtcbiAgICB9XG4gIH1cblxuICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9KTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb3B0aW9ucy5pbnNlcnQoc3R5bGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQob3B0aW9ucy5pbnNlcnQgfHwgJ2hlYWQnKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICByZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbnZhciByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICB2YXIgdGV4dFN0b3JlID0gW107XG4gIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgIHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcbiAgICByZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcbiAgfTtcbn0oKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyhzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG4gIHZhciBjc3MgPSByZW1vdmUgPyAnJyA6IG9iai5tZWRpYSA/IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIikuY29uY2F0KG9iai5jc3MsIFwifVwiKSA6IG9iai5jc3M7IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgdmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG4gICAgaWYgKGNoaWxkTm9kZXNbaW5kZXhdKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICBzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyhzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO1xuICB9XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiBidG9hKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(9);\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, ".chif-container {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tmax-width: 100%;\\n\\tmax-height: 100%;\\n\\twidth: 100%;\\n\\theight: auto;\\n}\\n\\n.chif-container img {\\n\\twidth: 100%;\\n\\theight: auto;\\n\\tuser-select: none;\\n}\\n\\n.chif-container .time-tray {\\n\\tborder-left: 1px solid lightgray;\\n\\tborder-right: 1px solid lightgray;\\n}\\n\\n.chif-container .player-tray {\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\talign-items: center;\\n\\tjustify-content: space-between;\\n\\tborder-left: 1px solid lightgray;\\n\\tborder-right: 1px solid lightgray;\\n\\tborder-bottom: 1px solid lightgray;\\n\\toverflow: hidden;\\n}\\n\\n.chif-container .audioplayer {\\n\\tdisplay: flex;\\n\\tflex-grow: 1;\\n\\theight: 40px;\\n\\toverflow: hidden;\\n}\\n\\n.chif-container .pButton {\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tborder: none;\\n\\tbackground-size: 50% 50%;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-position: center;\\n\\tfloat: left;\\n}\\n\\n.chif-container .rrButton {\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tborder: none;\\n\\tbackground-size: 100% 100%;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-position: center;\\n\\tfloat: left;\\n}\\n\\n.chif-container .ffButton {\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tborder: none;\\n\\tbackground-size: 100% 100%;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-position: center;\\n\\tfloat: left;\\n}\\n\\n.chif-container .rr {\\n\\tbackground-color: transparent;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .ff {\\n\\tbackground-color: transparent;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .transcript-button {\\n\\theight: 40px;\\n\\twidth: 40px;\\n\\tborder: none;\\n\\tbackground-size: 50% 50%;\\n\\tbackground-repeat: no-repeat;\\n\\tbackground-position: center;\\n\\tfloat: left;\\n}\\n\\n.chif-container .play {\\n\\tbackground-color: transparent;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .pause {\\n\\tbackground-color: transparent;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .timedisplay {\\n\\tdisplay: flex;\\n\\tpadding: 0 10px;\\n\\talign-items: center;\\n\\tfont-size: 14px;\\n\\tfont-weight: 600;\\n\\tuser-select: none;\\n}\\n\\n.chif-container .timeline {\\n\\tflex-grow: 1;\\n\\theight: 10px;\\n\\tbackground: rgba(0, 0, 0, 0.2);\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .playhead {\\n\\twidth: 8px;\\n\\theight: 10px;\\n\\tmargin-right: none;\\n\\toverflow: hidden;\\n\\tbackground: rgba(0, 0, 0, 1);\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .transcript-icon {\\n\\tbackground-color: transparent;\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\tcursor: pointer;\\n}\\n\\n.chif-container .transcription {\\n\\toverflow: auto;\\n\\tpadding: 4px;\\n\\tmax-height: 200px;\\n\\tborder-left: 1px solid lightgray;\\n\\tborder-right: 1px solid lightgray;\\n\\tborder-bottom: 1px solid lightgray;\\n\\toverflow-wrap: break-word;\\n\\tword-wrap: break-word;\\n\\thyphens: auto;\\n\\tbackground-color: rgb(255, 255, 255);\\n\\tcolor: black;\\n}\\n.chif-container .hidden {\\n\\tdisplay: none;\\n}\\n\\n.chif-container svg {\\n\\twidth: 18px;\\n\\theight: auto;\\n}\\n\\n.chif-container svg path {\\n\\tfill: black;\\n}\\n\\n/* CHIF Preview styles */\\n\\n.chif-preview {\\n\\tdisplay: flex;\\n\\tflex-wrap: wrap;\\n\\twidth: 100%;\\n}\\n\\n.chif-preview .overlay {\\n\\tposition: relative;\\n}\\n\\n.chif-preview .overlay img {\\n\\twidth: 100%;\\n\\t/* Prevent Highlight */\\n\\t-webkit-touch-callout: none; /* iOS Safari */\\n\\t-webkit-user-select: none; /* Safari */\\n\\t-khtml-user-select: none; /* Konqueror HTML */\\n\\t-moz-user-select: none; /* Firefox */\\n\\t-ms-user-select: none; /* Internet Explorer/Edge */\\n\\tuser-select: none; /* Non-prefixed  */\\n}\\n\\n.chif-preview .overlay .water-mark-btn {\\n\\tposition: absolute;\\n\\tz-index: 2;\\n\\tright: 10px;\\n\\tbottom: 10px;\\n\\tpadding: 5px;\\n\\tborder-radius: 10px;\\n\\tborder: none;\\n\\tcursor: pointer;\\n\\tbackground-color: rgba(0, 0, 0, 0.7);\\n\\tcolor: white;\\n}\\n\\n.chif-preview .overlay .water-mark-btn svg {\\n\\twidth: 40px;\\n\\theight: auto;\\n}\\n\\n.chif-preview .overlay .water-mark-btn svg path {\\n\\tfill: white;\\n}\\n\\n.chif-preview .overlay .wrap {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\topacity: 0;\\n\\tposition: absolute;\\n\\theight: 100%;\\n\\twidth: 100%;\\n\\tz-index: 1;\\n\\ttop: 0;\\n\\tright: 0;\\n\\ttransition: 0.25s;\\n\\tcursor: pointer;\\n\\tbackground: rgba(0, 0, 0, 0.6);\\n}\\n\\n.chif-preview .overlay .wrap svg {\\n\\twidth: 12%;\\n\\theight: auto;\\n}\\n\\n.chif-preview .overlay .wrap svg path {\\n\\tfill: white;\\n}\\n\\n.chif-preview .overlay:hover .wrap {\\n\\topacity: 1;\\n}\\n\\n.video{\\n\\twidth: 100%;\\n}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGlmUGxheWVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCOztBQUVoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMscUJBQXFCO0FBQ2pFOztBQUVBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixxQkFBcUI7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDhCQUE4Qjs7QUFFOUI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsY0FBYztBQUNuRTtBQUNBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n')}]);